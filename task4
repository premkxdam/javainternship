import org.apache.mahout.cf.taste.common.TasteException;
import org.apache.mahout.cf.taste.eval.*;
import org.apache.mahout.cf.taste.impl.eval.*;
import org.apache.mahout.cf.taste.impl.model.file.*;
import org.apache.mahout.cf.taste.impl.neighborhood.*;
import org.apache.mahout.cf.taste.impl.recommender.*;
import org.apache.mahout.cf.taste.impl.similarity.*;
import org.apache.mahout.cf.taste.model.DataModel;
import org.apache.mahout.cf.taste.neighborhood.UserNeighborhood;
import org.apache.mahout.cf.taste.recommender.*;
import org.apache.mahout.cf.taste.similarity.UserSimilarity;

import java.io.File;
import java.util.List;

public class ProductRecommendation {

    public static void main(String[] args) {
        try {
            // Load data from a CSV file
            File dataFile = new File("data.csv"); // Replace with your data file path
            DataModel model = new FileDataModel(dataFile);

            // Compute user similarity
            UserSimilarity similarity = new PearsonCorrelationSimilarity(model);

            // Define the user neighborhood
            UserNeighborhood neighborhood = new NearestNUserNeighborhood(2, similarity, model);

            // Build the recommender
            Recommender recommender = new GenericUserBasedRecommender(model, neighborhood, similarity);

            // Get recommendations for a user
            int userID = 1; // Replace with a valid user ID from your dataset
            List<RecommendedItem> recommendations = recommender.recommend(userID, 3);

            // Print the recommendations
            System.out.println("Recommended items for user " + userID + ":");
            for (RecommendedItem recommendation : recommendations) {
                System.out.println("Item ID: " + recommendation.getItemID() + " - Value: " + recommendation.getValue());
            }

        } catch (Exception e) {
            System.err.println("Error occurred: " + e.getMessage());
            e.printStackTrace();
        }
    }
}
